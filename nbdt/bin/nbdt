#!/usr/bin/env python
"""Run evaluation on a single image, using an NBDT"""

from nbdt.model import SoftNBDT
from pytorchcv.models.wrn_cifar import wrn28_10_cifar10
from torchvision import transforms
from nbdt.utils import DATASET_TO_CLASSES
import sys

assert len(sys.argv) > 1, "Need to pass image URL or image path as argument"

# load pretrained NBDT
model = wrn28_10_cifar10()
model = SoftNBDT(
  dataset='CIFAR10',
  model=model,
  hierarchy='induced-wrn28_10_cifar10',
  pretrained=True,
  arch='wrn28_10_cifar10')

# load + transform image
im = load_image_from_path(sys.argv[1])
transforms = transforms.Compose([
  transforms.Resize(32),
  transforms.CenterCrop(32),
  transforms.ToTensor(),
  transforms.Normalize((0.4914, 0.4822, 0.4465), (0.2023, 0.1994, 0.2010)),
])
x = transforms(im)[None]

# run inference
outputs = model(x)
cls = DATASET_TO_CLASSES['CIFAR10'][outputs[0]]
print(cls)
